/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id "org.openjfx.javafxplugin" version "0.1.0"

}


version = '1.0'


java {
    modularity.inferModulePath.set(false)

    // This source is Java 17.
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

javafx {
    version = "21.0.1"
    modules = ['javafx.controls', 'javafx.fxml']
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()

}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'


    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.0.0-android'

    // use Jep for python integration
    implementation 'black.ninia:jep:4.2.0'
}

application {
    mainClass.set('App')
}


// Define the 'installPythonRequirements' task
tasks.register('installPythonRequirements', Exec) {
    commandLine  'pip', 'install', '-r', 'requirements.txt'
}

// Make the 'build' task depend on the 'installPythonRequirements' task
//build.dependsOn tasks.named('installPythonRequirements')

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
